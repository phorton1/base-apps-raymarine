
# my $REGISTER_CARDIO_TEMPLATE = "0901050000000000{PORT}";
# my $REQUEST_FILE_TEMPLATE = "0201050006000000{PORT}000000009a9d0100";
    # uses $with_null
    # 0e005c63686172746361742e786d6c00";
    # / .........H..........\chartcat.xml
# my $REQUEST_2049_TEMPLATE = "0201050010110000{PORT}009a4c00000400001c005c4e6176696f6e69635c4368617274735c3347313338584c2e4e5632";
    #   .........H.šL.......\Navionic\Charts\3G138XL.NV2
    # an alternative is "0101050002000000{PORT}00000e005c6368617274 6361742e786d6c00"
    #   .........H....\chartcat.xml.
#
# The first packet sent, apart from WAKEUP/ALIVE by RNS is a registration packet
#   udp 10.0.241.54:2049 <-- 10.0.241.200:65362        09010500 00000000 0048
# The E80 responds by sending a udp packet to 0048 == 18432, perhaps an ack of th eregistration
#   10.0.241.54:1215     --> 10.0.241.200:18432    09000500 00000000 >>> ...0014802A08W7
# (I get the exact same packet back when I "register" with 2049)
#
# The next thing that happens is with 2050 GPS,
# It appears as if a local, two way tcp port is opened to 2050 ..
#   tcp 10.0.241.54:2050     <-- 10.0.241.200:51877    0800                                                                      ..
#   tcp 10.0.241.54:2050     <-- 10.0.241.200:51877    02011000 62000000                                                         ....b...
#   tcp 10.0.241.54:2050     <-- 10.0.241.200:51877    0c00                                                                      ..
#   tcp 10.0.241.54:2050     <-- 10.0.241.200:51877    05011000 01000000 62000000
# I don't know what the 6200 is
#     51877 = 0xCAA5 (A5CA in hex format)
#     0x62 = 98 if its on the uint32 boundry
#     0x6200 = 25088 doesn't match anything
# After this, the E80 apparently sends an E80NAV packet
#   udp(36)   224.30.38.195:2562   <-- 10.0.241.54:1217      00031000 02000000 17000000 2a000200 b8650506 00004700 00002a00 0200e767   ............*....e....G...*....g
#       E80NAV len(26) type(0x17) version(0x02)
#           6     HEAD(DEV,b865)                149.20
#           20    HEAD(ABS,e767)                152.40
# Before responding with a reply from 2050
#   tcp(2)    10.0.241.54:2050     --> 10.0.241.200:51877    1000
# After which some big 2563 packet is sent, and more 2050 packets
#   start going back and forth.

# I don't know if I really have to join multicast groups
# for the E80 to respond, or if I can send these things blindly.
# What I do suspect is that it will be very difficult to open
# all needed sockets inline in this main perl thread.
# And I'm already seeing wonky behavior from threads in general.

# my $REQUEST_PATH_TEMPLATE = "0201050010110000{PORT}009a4c0000040000";
# 1c005c4e6176696f6e69635c4368617274735c3347313338584c2e4e5632";
# my $REQUEST_XML_TEMPLATE = "0201050006000000{PORT}000000009a9d01000e005c63686172746361742e786d6c00";
    # / .........H..........\chartcat.xml
#
# The 9a9d0100 may be a session token that was gotten from previous packets
# and may change with different E80's